@use '@angular/material' as mat;

@include mat.core();

$my-theme: mat.define-theme((
 color: (
    theme-type: light,
    primary: mat.$violet-palette,
  ),
));

html {
  // Emit theme-dependent styles for common features used across multiple components.
  @include mat.core-theme($my-theme);

  // Emit styles for MatButton based on `$my-theme`. Because the configuration
  // passed to `define-theme` omits typography, `button-theme` will not
  // emit any typography styles.
  @include mat.button-theme($my-theme);

  // Include the theme mixins for other components you use here.
}

// @import '@angular/material/theming';

// @include mat.core();


// $my-theme-primary: mat-pallette($mat-indigo);
// $my-theme-accent: mat-pallette($mat-pink, A200, A100, A400);
// $my-theme-warn: mat-pallette($mat-red);


// $my-theme: mat-light-theme($my-theme-primary, $my-theme-accent, $my-theme-warn);

// @include angular-material-theme($my-theme);


// @use '@angular/material' as mat;

// @include mat.core();


// /* Light Theme */
// $light-theme: mat.define-light-theme((
//   color: (
//     primary: mat.define-palette(mat.$indigo-palette),
//     accent: mat.define-palette(mat.$amber-palette),
//     warn: mat.define-palette(mat.$red-palette),
//   ),
// ));

// /* Dark Theme */
// $dark-theme: mat.define-dark-theme((
//   color: (
//     primary: mat.define-palette(mat.$blue-grey-palette),
//     accent: mat.define-palette(mat.$orange-palette),
//     warn: mat.define-palette(mat.$pink-palette),
//   ),
// ));

// /* Light Theme */
// .light-theme {
//   @include mat.all-component-themes($light-theme);
// }

// /* Dark Theme */
// .dark-theme {
//   @include mat.all-component-themes($dark-theme);
// }